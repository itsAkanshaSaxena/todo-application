[{"D:\\React_to_do_list\\React_to_do_list\\todo-application\\src\\index.js":"1","D:\\React_to_do_list\\React_to_do_list\\todo-application\\src\\reportWebVitals.js":"2","D:\\React_to_do_list\\React_to_do_list\\todo-application\\src\\App.js":"3","D:\\React_to_do_list\\React_to_do_list\\todo-application\\src\\ProtectedRoute.js":"4","D:\\React_to_do_list\\React_to_do_list\\todo-application\\src\\components\\LoginSignupPage.js":"5","D:\\React_to_do_list\\React_to_do_list\\todo-application\\src\\components\\Homepage.js":"6","D:\\React_to_do_list\\React_to_do_list\\todo-application\\src\\components\\itemList.jsx":"7","D:\\React_to_do_list\\React_to_do_list\\todo-application\\src\\components\\navbar.jsx":"8","D:\\React_to_do_list\\React_to_do_list\\todo-application\\src\\components\\ErrorPage.js":"9"},{"size":543,"mtime":1697353843181,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":1697337719460,"results":"12","hashOfConfig":"11"},{"size":670,"mtime":1697353742409,"results":"13","hashOfConfig":"11"},{"size":900,"mtime":1697353612554,"results":"14","hashOfConfig":"11"},{"size":3742,"mtime":1697353308428,"results":"15","hashOfConfig":"11"},{"size":4212,"mtime":1697351753038,"results":"16","hashOfConfig":"11"},{"size":2091,"mtime":1697351738247,"results":"17","hashOfConfig":"11"},{"size":1008,"mtime":1697351747524,"results":"18","hashOfConfig":"11"},{"size":367,"mtime":1697348083845,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},"1phzql8",{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"26","messages":"27","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"25"},"D:\\React_to_do_list\\React_to_do_list\\todo-application\\src\\index.js",["47"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","D:\\React_to_do_list\\React_to_do_list\\todo-application\\src\\reportWebVitals.js",[],["48","49"],"D:\\React_to_do_list\\React_to_do_list\\todo-application\\src\\App.js",["50"],"import React from \"react\";\nimport \"./App.css\";\n\n\nimport HomePage from \"./components/Homepage\";\nimport LoginSignupPage from \"./components/LoginSignupPage\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { ProtectedRoute } from \"./ProtectedRoute\";\n\nimport ErrorPage from \"./components/ErrorPage\";\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Switch>\n          <Route exact path=\"/\" component={LoginSignupPage} />\n          <ProtectedRoute path=\"/homepage\" component={HomePage} />\n          <Route path=\"*\" component={ErrorPage} />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","D:\\React_to_do_list\\React_to_do_list\\todo-application\\src\\ProtectedRoute.js",["51"],"import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nexport const ProtectedRoute = ({\n  component: Component,\n  spinnerState,\n  ToggleSpinnerState,\n  ...rest\n}) => {\n  return (\n    <Route\n      {...rest}\n      render={(props) => {\n        console.log(\n          \"here\",\n          JSON.parse(localStorage.getItem(\"isAuthenticated\"))\n        );\n        if (JSON.parse(localStorage.getItem(\"isAuthenticated\"))) {\n          return (\n            <Component\n              {...props}\n              spinnerState={spinnerState}\n              ToggleSpinnerState={ToggleSpinnerState}\n            />\n          );\n        } else {\n          return (\n            <Redirect\n              to={{\n                pathname: \"/\",\n                state: {\n                  from: props.location,\n                },\n              }}\n            />\n          );\n        }\n      }}\n    />\n  );\n};\n","D:\\React_to_do_list\\React_to_do_list\\todo-application\\src\\components\\LoginSignupPage.js",["52"],"import React, { useState } from \"react\";\nimport \"../App.css\";\nimport NavBar from \"./navbar\";\nimport swal from \"sweetalert\";\n\nconst LoginSignupPage = (props) => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [allowSignup, setAllowSignup] = useState(false);\n\n  const handleSignup = (event) => {\n    event.preventDefault();\n    // Perform sign-in logic here\n   \n    localStorage.setItem(email, JSON.stringify({ email, password }));\n\n    swal(\"Success!\", \"Sign up successful!, please proceed with Sign in\", \"success\");\n    setAllowSignup(false);\n  };\n  const handleSignin = (event) => {\n    event.preventDefault();\n    // Perform sign-in logic here\n    const userData = JSON.parse(localStorage.getItem(email));\n    if (userData && userData.password === password) {\n     \n      swal(\"Success!\", \"Sign in successful!, please proceed with Sign in\", \"success\");\n    \n      localStorage.setItem(\"isAuthenticated\", JSON.stringify(true));\n     \n      localStorage.setItem(email, JSON.stringify({ email, password }));\n      props.history.push(\"/homepage\");\n      // Perform additional sign-in logic here\n    } else {\n     \n      swal(\"Failure!\", \"Invalid email or password, please try again!\", \"error\");\n    }\n  };\n  return (\n    <>\n    <NavBar/>\n    \n    <span className=\"glow\">Account Login/Signup Page</span>\n    <div className=\"Auth-form-container\">\n    <div className=\"Auth-form\">\n      {allowSignup ? (\n        <>\n      \n          <h2 className=\"designbottom\">Sign up</h2>\n\n          <form onSubmit={handleSignup} >\n            <div className=\"form-group mt-3\">\n            <label>\n              <div className=\"label1\">\n              Email:\n              </div>\n              <input\n                type=\"email\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n                required\n              />\n            </label>\n            </div>\n            <div className=\"form-group mt-3\">\n            <label>\n            <div className=\"label1\">\n              Password:\n             </div> \n              <input\n                type=\"password\"\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n                required\n              />\n            </label>\n            </div>\n            <div className=\"d-grid gap-2 mt-3\">\n            <button type=\"submit\">Sign Up</button>\n            </div>\n          </form>\n          \n        </>\n      ) : (\n        <>\n          <h2 className=\"designbottom\">Sign in</h2>\n          <form onSubmit={handleSignin}>\n            <label>\n              <div className=\"label1\">\n              Email:\n              </div>\n              <input\n                type=\"email\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n                required\n              />\n            </label>\n            <label >\n            <div className=\"label1\">\n              Password:\n            </div>\n              <input\n                type=\"password\"\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n                required\n              />\n            </label>\n            <button type=\"submit\">Sign In</button>\n          </form>\n          <span>\n            <div className=\"or-section\">\n              or{\" \"}\n              <button\n                type=\"submit\"\n                className=\"signup-btn\"\n                onClick={() => {\n                  \n                  setAllowSignup(true);\n                }}\n              >\n                signup\n              </button>\n            </div>\n          </span>\n        </>\n      )}\n    </div>\n    </div>\n    </>\n  );\n};\n\nexport default LoginSignupPage;\n","D:\\React_to_do_list\\React_to_do_list\\todo-application\\src\\components\\Homepage.js",["53"],"import React, { useState } from \"react\";\nimport \"../App.css\";\nimport swal from \"sweetalert\";\nimport ListItems from \"./itemList\";\nimport NavBar from \"./navbar\";\n\n\n\nimport \"mdbreact/dist/css/mdb.css\";\n\nconst Homepage = () => {\n  const [currentItem, setCurrentItem] = useState({\n    key: \"\",\n    text: \"\",\n    status: \"\",\n  });\n  const [items, setItems] = useState([\n    { key: 4, text: \"Do cool projects in React\", status: \"Completed\" },\n    { key: 9, text: \"Learn JavaScript\", status: \"Not Completed\" },\n  ]);\n\n  const checkComplete = () => {\n    if (items.length === 0) {\n      return (\n        <div className=\"imagebox\">\n          <img\n            className=\"img-completed\"\n            alt=\"\"\n            align=\"center\"\n            src=\"https://raw.githubusercontent.com/abhisheksaxena1998/reactToDoApplication/main/public/completed.png\"\n          ></img>\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"imagebox\">\n          <img\n            className=\"img-completed\"\n            alt=\"\"\n            align=\"center\"\n            src=\"https://raw.githubusercontent.com/abhisheksaxena1998/reactToDoApplication/main/public/todo.png\"\n          ></img>\n        </div>\n      );\n    }\n  };\n\n  const handleSubmit = () => {\n    const newItem = currentItem;\n    if (newItem.text !== \"\") {\n      swal(\"Added !\", \"To Do Saved !\", \"success\");\n      setItems([...items, currentItem]);\n      setCurrentItem({\n        text: \"\",\n        key: \"\",\n        status: \"\",\n      });\n    }\n  };\n\n  const totalTasks = () => {\n    return items.length;\n  };\n\n  const deleteItem = (key) => {\n    const filteredItems = items.filter((item) => item.key !== key);\n    setItems(filteredItems);\n  };\n\n  const markdoneItem = (item) => {\n    const filteredItems = items.filter((itemz) => itemz.key !== item.key);\n    var newItem = {\n      key: item.key,\n      text: item.text,\n      status: \"Completed\",\n    };\n\n    setItems([...filteredItems, newItem]);\n    setCurrentItem({\n      text: \"\",\n      key: \"\",\n      status: \"\",\n    });\n\n    \n  };\n\n  const markincompleteItem = (item) => {\n    const filteredItems = items.filter((itemz) => itemz.key !== item.key);\n    var newItem = {\n      key: item.key,\n      text: item.text,\n      status: \"Not Completed\",\n    };\n\n    setItems([...filteredItems, newItem]);\n    setCurrentItem({\n      text: \"\",\n      key: \"\",\n      status: \"\",\n    });\n    console.log(\"done filtered\", item);\n  };\n\n  const setUpdate = (text, key) => {\n    \n    items.map((item) => {\n      if (item.key === key) {\n        item.text = text;\n      }\n      return \"\";\n    });\n    setItems([...items]);\n  };\n  const handleReset = () => {\n    navigator.vibrate(100);\n    swal(\"Completed !\", \"Marked all as done !\", \"warning\");\n    const items = [];\n    setItems(items);\n  };\n\n  return (\n    <React.Fragment>\n      <NavBar totalTasks={items.length} />\n      <div className=\"container-for-tasks\">\n        <div className=\"card\">\n          <div className=\"card-body\">\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              value={currentItem.text}\n              placeholder=\"Enter tasks\"\n              onChange={(e) => {\n                setCurrentItem({\n                  text: e.target.value,\n                  key: Date.now(),\n                  status: \"Not Completed\",\n                });\n              }}\n            ></input>\n            <button\n              type=\"button\"\n              className=\"btn winter-neva-gradient waves-effect waves-light \"\n              onClick={handleSubmit}\n            >\n              Add task\n            </button>\n            <button\n              className=\"btn sunny-morning-gradient\n waves-effect waves-light \"\n              onClick={handleReset}\n            >\n              Mark all as done\n            </button>\n          </div>\n          {checkComplete()}\n        </div>\n      </div>\n\n      <main className=\"container\">\n        <ListItems\n          items={items}\n          status={items.status}\n          markdoneItem={markdoneItem}\n          markincompleteItem={markincompleteItem}\n          setUpdate={setUpdate}\n          deleteItem={deleteItem}\n        />\n      </main>\n    </React.Fragment>\n  );\n};\n\nexport default Homepage;\n","D:\\React_to_do_list\\React_to_do_list\\todo-application\\src\\components\\itemList.jsx",["54"],"import React, { useState } from \"react\";\nimport swal from \"sweetalert\";\nimport \"./itemList.css\";\n\n\nimport \"mdbreact/dist/css/mdb.css\";\n\nconst ListItems = (props) => {\n  const getBadgeClasses = (item) => {\n   \n    let classes = \"form-control-new-\";\n    classes += item.status === \"Completed\" ? \"completed\" : \"notcompleted\";\n  \n    return classes;\n  };\n\n  const getPillClasses = (item) => {\n    let classes = \"badge badge-pill badge-\";\n    classes += item.status === \"Completed\" ? \"primary\" : \"warning\";\n    return classes;\n  };\n\n  const items = props.items;\n  const listItems = items.map((item) => {\n  \n    return (\n      <div className=\"list\" key={item.key}>\n        <div className=\"newRow\">\n          <input\n            type=\"text\"\n            className={getBadgeClasses(item)}\n            id={item.key}\n            value={item.text}\n            onChange={(e) => {\n              props.setUpdate(e.target.value, item.key);\n            }}\n          />\n        </div>\n        <div className=\"newButtonRow\">\n          <button\n            className=\"btn btn-danger btn-sm\"\n            onClick={() => {\n              swal(\"Deleted !\", \"Task deleted :)\", \"error\");\n              props.deleteItem(item.key);\n            }}\n          >\n            Delete Task !\n          </button>\n          <button\n            className=\"btn dusty-grass-gradient btn-sm\"\n            onClick={() => {\n              swal(\"Done !\", \"Marked as done :)\", \"success\");\n              props.markdoneItem(item);\n            }}\n          >\n            Mark as Done !\n          </button>\n          <button\n            className=\"btn sunny-morning-gradient btn-sm\"\n            onClick={() => {\n              swal(\"Pending !\", \"Marked as pending :)\", \"info\");\n              props.markincompleteItem(item);\n            }}\n          >\n            Mark as incomplete !\n          </button>\n          <span className={getPillClasses(item)}>\n            Status: {item.status}\n          </span>\n        </div>\n      </div>\n    );\n  });\n\n  return (\n    <div>\n      <span>{listItems}</span>\n    </div>\n  );\n};\n\nexport default ListItems;\n","D:\\React_to_do_list\\React_to_do_list\\todo-application\\src\\components\\navbar.jsx",["55"],"import React from \"react\";\n\n\nimport \"mdbreact/dist/css/mdb.css\";\nimport \"../App.css\";\n\nconst NavBar = (props) => {\n \n  return (\n    <nav className=\"heavy-rain-gradient navbar navbar-light bg-light\">\n      <div className=\"container-fluid\">\n        <div className=\"navbar-brand\">\n          <img\n            alt=\"\"\n            src=\"https://raw.githubusercontent.com/abhisheksaxena1998/reactToDoApplication/main/src/og-image.png\"\n            height=\"60\"\n            loading=\"lazy\"\n          />\n          <strong>\n            {\"  \"}\n            To-Do Application{\" \"}\n          </strong>\n          <span className=\"badge badge-pill badge-secondary\">\n            {props.totalTasks}\n          </span>\n          \n          {JSON.parse(localStorage.getItem(\"isAuthenticated\"))==true?<a\n            className=\"logout-button\"\n            href=\"\"\n            onClick={() => localStorage.clear()}\n          >\n            Logout\n          </a>:<></>}\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nexport default NavBar;\n","D:\\React_to_do_list\\React_to_do_list\\todo-application\\src\\components\\ErrorPage.js",["56"],"import React, { useState } from \"react\";\r\nimport NavBar from \"./navbar\";\r\nimport image1 from './image1.png'\r\n\r\nconst ErrorPage = () => {\r\n  return (\r\n    <>\r\n      <NavBar />\r\n\r\n      <h1 className=\"editerrorpg\">Requested route does not exists  :(</h1>\r\n    \r\n      <img src={image1} className=\"App-logo\" alt=\"logo\"  />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ErrorPage;",{"ruleId":null,"fatal":true,"severity":2,"message":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","replacedBy":"61"},{"ruleId":null,"fatal":true,"severity":2,"message":"57"},{"ruleId":null,"fatal":true,"severity":2,"message":"57"},{"ruleId":null,"fatal":true,"severity":2,"message":"57"},{"ruleId":null,"fatal":true,"severity":2,"message":"57"},{"ruleId":null,"fatal":true,"severity":2,"message":"57"},{"ruleId":null,"fatal":true,"severity":2,"message":"57"},{"ruleId":"62","severity":1,"message":"63","line":1,"column":17,"nodeType":"64","messageId":"65","endLine":1,"endColumn":25},"Parsing error: Cannot find module './parse-with-scope'\nRequire stack:\n- D:\\React_to_do_list\\React_to_do_list\\todo-application\\node_modules\\babel-eslint\\lib\\index.js\n- D:\\React_to_do_list\\React_to_do_list\\todo-application\\node_modules\\@eslint\\eslintrc\\lib\\config-array-factory.js\n- D:\\React_to_do_list\\React_to_do_list\\todo-application\\node_modules\\@eslint\\eslintrc\\lib\\index.js\n- D:\\React_to_do_list\\React_to_do_list\\todo-application\\node_modules\\eslint\\lib\\cli-engine\\cli-engine.js\n- D:\\React_to_do_list\\React_to_do_list\\todo-application\\node_modules\\eslint\\lib\\cli-engine\\index.js\n- D:\\React_to_do_list\\React_to_do_list\\todo-application\\node_modules\\eslint\\lib\\api.js\n- D:\\React_to_do_list\\React_to_do_list\\todo-application\\node_modules\\eslint-webpack-plugin\\dist\\getESLint.js\n- D:\\React_to_do_list\\React_to_do_list\\todo-application\\node_modules\\eslint-webpack-plugin\\dist\\linter.js\n- D:\\React_to_do_list\\React_to_do_list\\todo-application\\node_modules\\eslint-webpack-plugin\\dist\\index.js\n- D:\\React_to_do_list\\React_to_do_list\\todo-application\\node_modules\\react-scripts\\config\\webpack.config.js\n- D:\\React_to_do_list\\React_to_do_list\\todo-application\\node_modules\\react-scripts\\scripts\\start.js","no-native-reassign",["66"],"no-negated-in-lhs",["67"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]